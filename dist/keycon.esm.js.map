{"version":3,"file":"keycon.esm.js","sources":["../src/KeyController.ts"],"sourcesContent":["import Component from \"@egjs/component\";\nimport { names } from \"keycode\";\nimport { isString, isArray, addEvent, removeEvent } from \"@daybrush/utils\";\n\nconst codeData = {\n    \"+\": \"plus\",\n    \"left command\": \"meta\",\n    \"right command\": \"meta\",\n};\nconst keysSort = {\n    shift: 1,\n    ctrl: 2,\n    alt: 3,\n    meta: 4,\n};\n/**\n * @memberof KeyController\n */\nexport function getKey(keyCode: number): string {\n    let key = names[keyCode] || \"\";\n\n    for (const name in codeData) {\n        key = key.replace(name, codeData[name]);\n    }\n    return key.replace(/\\s/g, \"\");\n}\n\n/**\n * @memberof KeyController\n */\nexport function getCombi(e: KeyboardEvent, key: string = getKey(e.keyCode)): string[] {\n    const keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n    keys.indexOf(key) === -1 && keys.push(key);\n\n    return keys.filter(Boolean);\n}\n\nfunction getArrangeCombi(keys: string[]) {\n    const arrangeKeys = keys.slice();\n    arrangeKeys.sort((prev, next) => {\n        const prevScore = keysSort[prev] || 5;\n        const nextScore = keysSort[next] || 5;\n\n        return prevScore - nextScore;\n    });\n\n    return arrangeKeys;\n}\n/**\n * @typedef\n * @memberof KeyController\n */\nexport interface KeyControllerEvent {\n    inputEvent: KeyboardEvent;\n    isToggle: boolean;\n    key: string;\n    keyCode: number;\n    ctrlKey: boolean;\n    altKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\nlet globalKeyController!: KeyController;\n\n/**\n */\nclass KeyController extends Component {\n    /**\n     */\n    public static get global() {\n        return globalKeyController || (globalKeyController = new KeyController());\n    }\n    public static setGlobal() {\n        return this.global;\n    }\n    /**\n     */\n    public ctrlKey = false;\n    /**\n     */\n    public altKey = false;\n    /**\n     *\n     */\n    public shiftKey = false;\n    /**\n     *\n     */\n    public metaKey = false;\n    /**\n     *\n     */\n    constructor(private container: Window | Document | HTMLElement = window) {\n        super();\n\n        addEvent(container, \"blur\", this.blur);\n        addEvent(container, \"keydown\", this.keydownEvent);\n        addEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public clear = (): this => {\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.shiftKey = false;\n        this.metaKey = false;\n        return this;\n    }\n    /**\n     *\n     */\n    public destroy() {\n        const container = this.container as any;\n\n        this.clear();\n        this.off();\n        removeEvent(container, \"blur\", this.blur);\n        removeEvent(container, \"keydown\", this.keydownEvent);\n        removeEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public keydown(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keydown\", comb, callback);\n    }\n    public offKeydown(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keydown\", comb, callback);\n    }\n    public offKeyup(comb: string | string[], callback?: (e: KeyControllerEvent) => void): this;\n    public offKeyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public offKeyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.removeEvent(\"keyup\", comb, callback);\n    }\n    public keyup(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ): this {\n        return this.addEvent(\"keyup\", comb, callback);\n    }\n    private addEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.on(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.on(`${type}.${comb}`, callback);\n        } else {\n            this.on(type, comb);\n        }\n        return this;\n    }\n    private removeEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void) | undefined,\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        if (isArray(comb)) {\n            this.off(`${type}.${getArrangeCombi(comb).join(\".\")}`, callback);\n        } else if (isString(comb)) {\n            this.off(`${type}.${comb}`, callback);\n        } else {\n            this.off(type, comb);\n        }\n        return this;\n    }\n    private triggerEvent(type: \"keydown\" | \"keyup\", e: KeyboardEvent) {\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n\n        const key = getKey(e.keyCode);\n        const isToggle = key === \"ctrl\"\n            || key === \"shift\"\n            || key === \"meta\"\n            || key === \"alt\";\n        const param: KeyControllerEvent = {\n            key,\n            isToggle,\n            inputEvent: e,\n            keyCode: e.keyCode,\n            ctrlKey: e.ctrlKey,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey,\n            metaKey: e.metaKey,\n        };\n        this.trigger(type, param);\n        this.trigger(`${type}.${key}`, param);\n\n        const combi = getCombi(e, key);\n\n        combi.length > 1 && this.trigger(`${type}.${combi.join(\".\")}`, param);\n    }\n    private keydownEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keydown\", e);\n    }\n    private keyupEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keyup\", e);\n    }\n    private blur = () => {\n        this.clear();\n        this.trigger(\"blur\");\n    }\n}\n\nexport default KeyController;\n"],"names":["codeData","keysSort","shift","ctrl","alt","meta","getKey","keyCode","key","names","name","replace","getCombi","e","keys","shiftKey","ctrlKey","altKey","metaKey","indexOf","push","filter","Boolean","getArrangeCombi","arrangeKeys","slice","sort","prev","next","prevScore","nextScore","globalKeyController","tslib_1","container","_super","_this","triggerEvent","clear","trigger","addEvent","blur","keydownEvent","keyupEvent","Object","KeyController","global","off","removeEvent","comb","callback","type","isArray","on","join","isString","isToggle","param","inputEvent","combi","length","Component"],"mappings":"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"}