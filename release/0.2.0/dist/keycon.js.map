{"version":3,"file":"keycon.js","sources":["../node_modules/keycode/index.js","../src/KeyController.ts"],"sourcesContent":["// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n\n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","import Component from \"@egjs/component\";\nimport { names } from \"keycode\";\nimport { isString, isArray, addEvent } from \"@daybrush/utils\";\n\nconst codeData = {\n    \"+\": \"plus\",\n    \"left command\": \"meta\",\n    \"right command\": \"meta\",\n};\nconst keysSort = {\n    shift: 1,\n    ctrl: 2,\n    alt: 3,\n    meta: 4,\n};\nfunction getKey(keyCode: number) {\n    let key = names[keyCode] || \"\";\n\n    for (const name in codeData) {\n        key = key.replace(name, codeData[name]);\n    }\n    return key.replace(/\\s/g, \"\");\n}\nfunction getCombi(e: KeyboardEvent, key: string) {\n    const keys = [e.shiftKey && \"shift\", e.ctrlKey && \"ctrl\", e.altKey && \"alt\", e.metaKey && \"meta\"];\n    keys.indexOf(key) === -1 && keys.push(key);\n\n    return keys.filter(Boolean);\n}\nfunction getArrangeCombi(keys: string[]) {\n    const arrangeKeys = keys.slice();\n    arrangeKeys.sort((prev, next) => {\n        const prevScore = keysSort[prev] || 5;\n        const nextScore = keysSort[next] || 5;\n\n        return prevScore - nextScore;\n    });\n\n    return arrangeKeys;\n}\n/**\n * @typedef\n * @memberof KeyController\n */\nexport interface KeyControllerEvent {\n    inputEvent: KeyboardEvent;\n    key: string;\n    keyCode: number;\n    ctrlKey: boolean;\n    altKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n/**\n */\nclass KeyController extends Component {\n    /**\n     */\n    public ctrlKey = false;\n    /**\n     */\n    public altKey = false;\n    /**\n     *\n     */\n    public shiftKey = false;\n    /**\n     *\n     */\n    public metaKey = false;\n    /**\n     *\n     */\n    constructor(container: Window | Document | HTMLElement = window) {\n        super();\n\n        addEvent(container, \"blur\", this.clear);\n        addEvent(container, \"keydown\", this.keydownEvent);\n        addEvent(container, \"keyup\", this.keyupEvent);\n    }\n    public clear = () => {\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.shiftKey = false;\n        this.metaKey = false;\n    }\n    public keydown(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keydown(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keydown(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        return this.addEvent(\"keydown\", comb, callback);\n    }\n    public keyup(comb: string | string[], callback: (e: KeyControllerEvent) => void): this;\n    public keyup(callback: (e: KeyControllerEvent) => void): this;\n    /**\n     *\n     */\n    public keyup(\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        return this.addEvent(\"keyup\", comb, callback);\n    }\n    private addEvent(\n        type: \"keydown\" | \"keyup\",\n        comb: string | string[] | ((e: KeyControllerEvent) => void),\n        callback?: (e: KeyControllerEvent) => void,\n    ) {\n        let name: string = type;\n        if (isArray(comb)) {\n            name = `${type}.${getArrangeCombi(comb).join(\".\")}`;\n        } else if (isString(comb)) {\n            name = `${type}.${comb}`;\n        }\n        this.on(name, callback);\n        return this;\n    }\n    private triggerEvent(type: \"keydown\" | \"keyup\", e: KeyboardEvent) {\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n\n        const key = getKey(e.keyCode);\n        const param: KeyControllerEvent = {\n            key,\n            inputEvent: e,\n            keyCode: e.keyCode,\n            ctrlKey: e.ctrlKey,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey,\n            metaKey: e.metaKey,\n        };\n        this.trigger(type, param);\n        this.trigger(`${type}.${key}`, param);\n\n        const combi = getCombi(e, key);\n\n        combi.length > 1 && this.trigger(`${type}.${combi.join(\".\")}`, param);\n    }\n    private keydownEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keydown\", e);\n    }\n    private keyupEvent = (e: KeyboardEvent) => {\n        this.triggerEvent(\"keyup\", e);\n    }\n}\n\nexport default KeyController;\n"],"names":["keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","String","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","event","nameOrCode","exports","module","i","fromCharCode","alias","codeData","keysSort","shift","ctrl","alt","meta","container","_super","_this","ctrlKey","altKey","shiftKey","metaKey","e","triggerEvent","addEvent","clear","keydownEvent","keyupEvent","tslib_1","comb","callback","this","type","name","isArray","keys","arrangeKeys","slice","sort","prev","next","getArrangeCombi","join","isString","on","key","replace","getKey","param","inputEvent","trigger","combi","indexOf","push","filter","Boolean","getCombi","Component"],"mappings":"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"}